/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package radium226.swig;

public class Showcase {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Showcase(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Showcase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        globalJNI.delete_Showcase(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static void displayImageUsingOpenCVInCpp(org.opencv.core.Mat mat) {
    globalJNI.Showcase_displayImageUsingOpenCVInCpp(mat.getNativeObjAddr());
  }

  public static void displayImageUsingDLibInCpp(org.opencv.core.Mat mat) {
    globalJNI.Showcase_displayImageUsingDLibInCpp(mat.getNativeObjAddr());
  }

  public static void drawCircleImageUsingOpenCVInCpp(int x, int y, int radius, int red, int green, int blue, org.opencv.core.Mat mat) {
    globalJNI.Showcase_drawCircleImageUsingOpenCVInCpp(x, y, radius, red, green, blue, mat.getNativeObjAddr());
  }

  public static void drawCircleImageUsingDLibInCpp(int x, int y, int radius, int red, int green, int blue, org.opencv.core.Mat mat) {
    globalJNI.Showcase_drawCircleImageUsingDLibInCpp(x, y, radius, red, green, blue, mat.getNativeObjAddr());
  }

  public Showcase() {
    this(globalJNI.new_Showcase(), true);
  }

}
